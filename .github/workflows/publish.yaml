name: Publish Runner Image

on:
  workflow_dispatch:
    inputs:
      runnerVersion:
        type: string
        description: Version of the runner being installed
  workflow_call:
    inputs:
      runnerVersion:
        type: string
        description: Version of the runner being installed
    secrets:
      DOCKER_TOKEN:
        description: Token for logging into the docker registry
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/github-actions-runner

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Compute image version
        id: image
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const inputRunnerVersion = "${{ inputs.runnerVersion }}"
            if (inputRunnerVersion) {
              console.log(`Using input runner version ${inputRunnerVersion}`)
              core.setOutput('version', inputRunnerVersion);
              return
            }
            console.log(`Using runner version ${runnerVersion}`)
            core.setOutput('version', runnerVersion);

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          file: ./images/Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            RUNNER_VERSION=${{ steps.image.outputs.version }}
          push: true
          labels: |
            org.opencontainers.image.source=${{github.server_url}}/${{github.repository}}
            org.opencontainers.image.description=https://github.com/mysteq/github-actions-runner/releases/tag/v${{ steps.image.outputs.version }}
            org.opencontainers.image.licenses=MIT

  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Compute image version
        id: image
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const inputRunnerVersion = "${{ inputs.runnerVersion }}"
            if (inputRunnerVersion) {
              console.log(`Using input runner version ${inputRunnerVersion}`)
              core.setOutput('version', inputRunnerVersion);
              return
            }
            console.log(`Using runner version ${runnerVersion}`)
            core.setOutput('version', runnerVersion);

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          file: ./images/Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest
          build-args: |
            RUNNER_VERSION=${{ steps.image.outputs.version }}
          push: true
          labels: |
            org.opencontainers.image.source=${{github.server_url}}/${{github.repository}}
            org.opencontainers.image.description=https://github.com/mysteq/github-actions-runner/releases/tag/v${{ steps.image.outputs.version }}
            org.opencontainers.image.licenses=MIT